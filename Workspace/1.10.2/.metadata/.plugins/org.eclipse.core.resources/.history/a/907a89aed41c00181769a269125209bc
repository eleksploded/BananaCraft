package com.pikachu923.BananaCraft.gems;

import java.util.List;

import org.apache.logging.log4j.Level;

import com.pikachu923.BananaCraft.init.DebugItems;
import com.pikachu923.BananaCraft.items.ItemWrapper;
import com.pikachu923.BananaCraft.reference.Reference;
import com.pikachu923.BananaCraft.utility.LogHelper;
import com.pikachu923.BananaCraft.utility.func;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.PlayerCapabilities;
import net.minecraft.init.MobEffects;
import net.minecraft.item.ItemStack;
import net.minecraft.potion.Potion;
import net.minecraft.potion.PotionEffect;
import net.minecraft.world.World;

public class UltraGem extends ItemWrapper {
	String Texture;
	int timer = 0;
	int max;
    public UltraGem(String unlocalName, int Max){
        super();
        this.setUnlocalizedName(unlocalName);
        Texture = Reference.RESOURCE_PREFIX + "UltraOrb";
        setCreativeTab(Reference.GemTab);
        setMaxDamage(256);
        setMaxStackSize(1);
        max = Max;
    }

    public void onUpdate(ItemStack stack, World p_77663_2_, Entity entity, int p_77663_4_, boolean p_77663_5_) {
    	EntityPlayer player = (EntityPlayer) entity;
    	
    	
    	player.addPotionEffect(new PotionEffect(MobEffects.REGENERATION, 40, 1, true,false));
    	player.addPotionEffect(new PotionEffect(MobEffects.HASTE, 40, 1, true,false));
		player.addPotionEffect(new PotionEffect(MobEffects.JUMP_BOOST, 40, 1, true,false));
		player.addPotionEffect(new PotionEffect(MobEffects.STRENGTH, 40, 1, true,false));
    	player.addPotionEffect(new PotionEffect(MobEffects.FIRE_RESISTANCE, 40, 0, true,false));
    	player.addPotionEffect(new PotionEffect(MobEffects.WATER_BREATHING, 40, 0, true,false));
    	player.addPotionEffect(new PotionEffect(MobEffects.RESISTANCE, 40, 0, true,false));

    		
    	if(!player.capabilities.isCreativeMode) {
    		
    		if(timer == max) {
    			if(stack.getItemDamage() == stack.getMaxDamage() ){
    				func.removeItem(player, stack);
    				timer = 0;
    			}else{
    				timer = 0;
    				stack.setItemDamage(stack.getItemDamage() + 1);
    			}
    		} else { 
    			timer++;
    		}
    	}
    }
    
}

